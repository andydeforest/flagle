import{a as P,o as m,h as S,b as y,i as W,j as Se,v as ve,F as Y,r as J,t as se,k as F,f as ae,c as K,w as fe}from"./entry.53a171bc.js";import{_ as Ae,a as we}from"./Main.e26a820d.js";const Ee={props:{result:Object},computed:{distance(){return this.result?parseInt(this.result.distance.toFixed(0)).toLocaleString()+" km":""},bearingIcon(){return this.result?this.result.success?"&#127881":this.result.bearing<=30?"&#x02191":this.result.bearing>30&&this.result.bearing<=75?"&#x02197":this.result.bearing>75&&this.result.bearing<=120?"&#x02192;":this.result.bearing>120&&this.result.bearing<=165?"&#x02198":this.result.bearing>165&&this.result.bearing<=210?"&#x02193":this.result.bearing>210&&this.result.bearing<=255?"&#x02199":this.result.bearing>255&&this.result.bearing<=300?"&#x02190":"&#x02196":""},percent(){if(this.result){const a=this.result.percent*100;return a>=100?"100%":a<=0?"0%":`${a.toFixed(0)}%`}return""}}},ke=["value"],Le=["value"],Re=y("input",{type:"text",readonly:""},null,-1),Ce=["innerHTML"],Ne=["value"];function Te(a,e,t,n,c,i){return m(),S("div",{class:W(["game-guess",[t.result&&t.result.success?"success":""]])},[y("div",null,[y("input",{type:"text",value:t.result?t.result.guess:"",readonly:""},null,8,ke)]),y("div",null,[y("input",{type:"text",value:i.distance,readonly:""},null,8,Le)]),y("div",null,[Re,y("span",{class:"game-guess__emoji-overlay",innerHTML:i.bearingIcon},null,8,Ce)]),y("div",null,[y("input",{type:"text",value:i.percent,readonly:""},null,8,Ne)])],2)}const Oe=P(Ee,[["render",Te]]);function w(a){return Array.isArray?Array.isArray(a):he(a)==="[object Array]"}const $e=1/0;function Pe(a){if(typeof a=="string")return a;let e=a+"";return e=="0"&&1/a==-$e?"-0":e}function Be(a){return a==null?"":Pe(a)}function v(a){return typeof a=="string"}function ge(a){return typeof a=="number"}function Ge(a){return a===!0||a===!1||De(a)&&he(a)=="[object Boolean]"}function be(a){return typeof a=="object"}function De(a){return be(a)&&a!==null}function _(a){return a!=null}function H(a){return!a.trim().length}function he(a){return a==null?a===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(a)}const Fe="Incorrect 'index' type",Ke=a=>`Invalid value for key ${a}`,je=a=>`Pattern length exceeds max of ${a}.`,ze=a=>`Missing ${a} property in key`,Ve=a=>`Property 'weight' in key '${a}' must be a positive integer`,de=Object.prototype.hasOwnProperty;class He{constructor(e){this._keys=[],this._keyMap={};let t=0;e.forEach(n=>{let c=pe(n);t+=c.weight,this._keys.push(c),this._keyMap[c.id]=c,t+=c.weight}),this._keys.forEach(n=>{n.weight/=t})}get(e){return this._keyMap[e]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function pe(a){let e=null,t=null,n=null,c=1,i=null;if(v(a)||w(a))n=a,e=re(a),t=Q(a);else{if(!de.call(a,"name"))throw new Error(ze("name"));const d=a.name;if(n=d,de.call(a,"weight")&&(c=a.weight,c<=0))throw new Error(Ve(d));e=re(d),t=Q(d),i=a.getFn}return{path:e,id:t,weight:c,src:n,getFn:i}}function re(a){return w(a)?a:a.split(".")}function Q(a){return w(a)?a.join("."):a}function Ue(a,e){let t=[],n=!1;const c=(i,d,r)=>{if(_(i))if(!d[r])t.push(i);else{let l=d[r];const u=i[l];if(!_(u))return;if(r===d.length-1&&(v(u)||ge(u)||Ge(u)))t.push(Be(u));else if(w(u)){n=!0;for(let o=0,f=u.length;o<f;o+=1)c(u[o],d,r+1)}else d.length&&c(u,d,r+1)}};return c(a,v(e)?e.split("."):e,0),n?t:t[0]}const We={includeMatches:!1,findAllMatches:!1,minMatchCharLength:1},Ye={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(a,e)=>a.score===e.score?a.idx<e.idx?-1:1:a.score<e.score?-1:1},Je={location:0,threshold:.6,distance:100},Qe={useExtendedSearch:!1,getFn:Ue,ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1};var s={...Ye,...We,...Je,...Qe};const Xe=/[^ ]+/g;function Ze(a=1,e=3){const t=new Map,n=Math.pow(10,e);return{get(c){const i=c.match(Xe).length;if(t.has(i))return t.get(i);const d=1/Math.pow(i,.5*a),r=parseFloat(Math.round(d*n)/n);return t.set(i,r),r},clear(){t.clear()}}}class ne{constructor({getFn:e=s.getFn,fieldNormWeight:t=s.fieldNormWeight}={}){this.norm=Ze(t,3),this.getFn=e,this.isCreated=!1,this.setIndexRecords()}setSources(e=[]){this.docs=e}setIndexRecords(e=[]){this.records=e}setKeys(e=[]){this.keys=e,this._keysMap={},e.forEach((t,n)=>{this._keysMap[t.id]=n})}create(){this.isCreated||!this.docs.length||(this.isCreated=!0,v(this.docs[0])?this.docs.forEach((e,t)=>{this._addString(e,t)}):this.docs.forEach((e,t)=>{this._addObject(e,t)}),this.norm.clear())}add(e){const t=this.size();v(e)?this._addString(e,t):this._addObject(e,t)}removeAt(e){this.records.splice(e,1);for(let t=e,n=this.size();t<n;t+=1)this.records[t].i-=1}getValueForItemAtKeyId(e,t){return e[this._keysMap[t]]}size(){return this.records.length}_addString(e,t){if(!_(e)||H(e))return;let n={v:e,i:t,n:this.norm.get(e)};this.records.push(n)}_addObject(e,t){let n={i:t,$:{}};this.keys.forEach((c,i)=>{let d=c.getFn?c.getFn(e):this.getFn(e,c.path);if(_(d)){if(w(d)){let r=[];const l=[{nestedArrIndex:-1,value:d}];for(;l.length;){const{nestedArrIndex:u,value:o}=l.pop();if(_(o))if(v(o)&&!H(o)){let f={v:o,i:u,n:this.norm.get(o)};r.push(f)}else w(o)&&o.forEach((f,g)=>{l.push({nestedArrIndex:g,value:f})})}n.$[i]=r}else if(v(d)&&!H(d)){let r={v:d,n:this.norm.get(d)};n.$[i]=r}}}),this.records.push(n)}toJSON(){return{keys:this.keys,records:this.records}}}function ye(a,e,{getFn:t=s.getFn,fieldNormWeight:n=s.fieldNormWeight}={}){const c=new ne({getFn:t,fieldNormWeight:n});return c.setKeys(a.map(pe)),c.setSources(e),c.create(),c}function qe(a,{getFn:e=s.getFn,fieldNormWeight:t=s.fieldNormWeight}={}){const{keys:n,records:c}=a,i=new ne({getFn:e,fieldNormWeight:t});return i.setKeys(n),i.setIndexRecords(c),i}function D(a,{errors:e=0,currentLocation:t=0,expectedLocation:n=0,distance:c=s.distance,ignoreLocation:i=s.ignoreLocation}={}){const d=e/a.length;if(i)return d;const r=Math.abs(n-t);return c?d+r/c:r?1:d}function et(a=[],e=s.minMatchCharLength){let t=[],n=-1,c=-1,i=0;for(let d=a.length;i<d;i+=1){let r=a[i];r&&n===-1?n=i:!r&&n!==-1&&(c=i-1,c-n+1>=e&&t.push([n,c]),n=-1)}return a[i-1]&&i-n>=e&&t.push([n,i-1]),t}const N=32;function tt(a,e,t,{location:n=s.location,distance:c=s.distance,threshold:i=s.threshold,findAllMatches:d=s.findAllMatches,minMatchCharLength:r=s.minMatchCharLength,includeMatches:l=s.includeMatches,ignoreLocation:u=s.ignoreLocation}={}){if(e.length>N)throw new Error(je(N));const o=e.length,f=a.length,g=Math.max(0,Math.min(n,f));let b=i,h=g;const M=r>1||l,R=M?Array(f):[];let A;for(;(A=a.indexOf(e,h))>-1;){let x=D(e,{currentLocation:A,expectedLocation:g,distance:c,ignoreLocation:u});if(b=Math.min(x,b),h=A+o,M){let E=0;for(;E<o;)R[A+E]=1,E+=1}}h=-1;let T=[],C=1,B=o+f;const Ie=1<<o-1;for(let x=0;x<o;x+=1){let E=0,k=B;for(;E<k;)D(e,{errors:x,currentLocation:g+k,expectedLocation:g,distance:c,ignoreLocation:u})<=b?E=k:B=k,k=Math.floor((B-E)/2+E);B=k;let ce=Math.max(1,g-k+1),V=d?f:Math.min(g+k,f)+o,O=Array(V+2);O[V+1]=(1<<x)-1;for(let I=V;I>=ce;I-=1){let G=I-1,ie=t[a.charAt(G)];if(M&&(R[G]=+!!ie),O[I]=(O[I+1]<<1|1)&ie,x&&(O[I]|=(T[I+1]|T[I])<<1|1|T[I+1]),O[I]&Ie&&(C=D(e,{errors:x,currentLocation:G,expectedLocation:g,distance:c,ignoreLocation:u}),C<=b)){if(b=C,h=G,h<=g)break;ce=Math.max(1,2*g-h)}}if(D(e,{errors:x+1,currentLocation:g,expectedLocation:g,distance:c,ignoreLocation:u})>b)break;T=O}const z={isMatch:h>=0,score:Math.max(.001,C)};if(M){const x=et(R,r);x.length?l&&(z.indices=x):z.isMatch=!1}return z}function at(a){let e={};for(let t=0,n=a.length;t<n;t+=1){const c=a.charAt(t);e[c]=(e[c]||0)|1<<n-t-1}return e}class me{constructor(e,{location:t=s.location,threshold:n=s.threshold,distance:c=s.distance,includeMatches:i=s.includeMatches,findAllMatches:d=s.findAllMatches,minMatchCharLength:r=s.minMatchCharLength,isCaseSensitive:l=s.isCaseSensitive,ignoreLocation:u=s.ignoreLocation}={}){if(this.options={location:t,threshold:n,distance:c,includeMatches:i,findAllMatches:d,minMatchCharLength:r,isCaseSensitive:l,ignoreLocation:u},this.pattern=l?e:e.toLowerCase(),this.chunks=[],!this.pattern.length)return;const o=(g,b)=>{this.chunks.push({pattern:g,alphabet:at(g),startIndex:b})},f=this.pattern.length;if(f>N){let g=0;const b=f%N,h=f-b;for(;g<h;)o(this.pattern.substr(g,N),g),g+=N;if(b){const M=f-N;o(this.pattern.substr(M),M)}}else o(this.pattern,0)}searchIn(e){const{isCaseSensitive:t,includeMatches:n}=this.options;if(t||(e=e.toLowerCase()),this.pattern===e){let h={isMatch:!0,score:0};return n&&(h.indices=[[0,e.length-1]]),h}const{location:c,distance:i,threshold:d,findAllMatches:r,minMatchCharLength:l,ignoreLocation:u}=this.options;let o=[],f=0,g=!1;this.chunks.forEach(({pattern:h,alphabet:M,startIndex:R})=>{const{isMatch:A,score:T,indices:C}=tt(e,h,M,{location:c+R,distance:i,threshold:d,findAllMatches:r,minMatchCharLength:l,includeMatches:n,ignoreLocation:u});A&&(g=!0),f+=T,A&&C&&(o=[...o,...C])});let b={isMatch:g,score:g?f/this.chunks.length:1};return g&&n&&(b.indices=o),b}}class L{constructor(e){this.pattern=e}static isMultiMatch(e){return le(e,this.multiRegex)}static isSingleMatch(e){return le(e,this.singleRegex)}search(){}}function le(a,e){const t=a.match(e);return t?t[1]:null}class nt extends L{constructor(e){super(e)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(e){const t=e===this.pattern;return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}class ct extends L{constructor(e){super(e)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(e){const n=e.indexOf(this.pattern)===-1;return{isMatch:n,score:n?0:1,indices:[0,e.length-1]}}}class it extends L{constructor(e){super(e)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(e){const t=e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}class dt extends L{constructor(e){super(e)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(e){const t=!e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class rt extends L{constructor(e){super(e)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(e){const t=e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[e.length-this.pattern.length,e.length-1]}}}class lt extends L{constructor(e){super(e)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(e){const t=!e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class _e extends L{constructor(e,{location:t=s.location,threshold:n=s.threshold,distance:c=s.distance,includeMatches:i=s.includeMatches,findAllMatches:d=s.findAllMatches,minMatchCharLength:r=s.minMatchCharLength,isCaseSensitive:l=s.isCaseSensitive,ignoreLocation:u=s.ignoreLocation}={}){super(e),this._bitapSearch=new me(e,{location:t,threshold:n,distance:c,includeMatches:i,findAllMatches:d,minMatchCharLength:r,isCaseSensitive:l,ignoreLocation:u})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(e){return this._bitapSearch.searchIn(e)}}class Me extends L{constructor(e){super(e)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(e){let t=0,n;const c=[],i=this.pattern.length;for(;(n=e.indexOf(this.pattern,t))>-1;)t=n+i,c.push([n,t-1]);const d=!!c.length;return{isMatch:d,score:d?0:1,indices:c}}}const X=[nt,Me,it,dt,lt,rt,ct,_e],ue=X.length,ut=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,ot="|";function st(a,e={}){return a.split(ot).map(t=>{let n=t.trim().split(ut).filter(i=>i&&!!i.trim()),c=[];for(let i=0,d=n.length;i<d;i+=1){const r=n[i];let l=!1,u=-1;for(;!l&&++u<ue;){const o=X[u];let f=o.isMultiMatch(r);f&&(c.push(new o(f,e)),l=!0)}if(!l)for(u=-1;++u<ue;){const o=X[u];let f=o.isSingleMatch(r);if(f){c.push(new o(f,e));break}}}return c})}const ft=new Set([_e.type,Me.type]);class gt{constructor(e,{isCaseSensitive:t=s.isCaseSensitive,includeMatches:n=s.includeMatches,minMatchCharLength:c=s.minMatchCharLength,ignoreLocation:i=s.ignoreLocation,findAllMatches:d=s.findAllMatches,location:r=s.location,threshold:l=s.threshold,distance:u=s.distance}={}){this.query=null,this.options={isCaseSensitive:t,includeMatches:n,minMatchCharLength:c,findAllMatches:d,ignoreLocation:i,location:r,threshold:l,distance:u},this.pattern=t?e:e.toLowerCase(),this.query=st(this.pattern,this.options)}static condition(e,t){return t.useExtendedSearch}searchIn(e){const t=this.query;if(!t)return{isMatch:!1,score:1};const{includeMatches:n,isCaseSensitive:c}=this.options;e=c?e:e.toLowerCase();let i=0,d=[],r=0;for(let l=0,u=t.length;l<u;l+=1){const o=t[l];d.length=0,i=0;for(let f=0,g=o.length;f<g;f+=1){const b=o[f],{isMatch:h,indices:M,score:R}=b.search(e);if(h){if(i+=1,r+=R,n){const A=b.constructor.type;ft.has(A)?d=[...d,...M]:d.push(M)}}else{r=0,i=0,d.length=0;break}}if(i){let f={isMatch:!0,score:r/i};return n&&(f.indices=d),f}}return{isMatch:!1,score:1}}}const Z=[];function bt(...a){Z.push(...a)}function q(a,e){for(let t=0,n=Z.length;t<n;t+=1){let c=Z[t];if(c.condition(a,e))return new c(a,e)}return new me(a,e)}const j={AND:"$and",OR:"$or"},ee={PATH:"$path",PATTERN:"$val"},te=a=>!!(a[j.AND]||a[j.OR]),ht=a=>!!a[ee.PATH],pt=a=>!w(a)&&be(a)&&!te(a),oe=a=>({[j.AND]:Object.keys(a).map(e=>({[e]:a[e]}))});function xe(a,e,{auto:t=!0}={}){const n=c=>{let i=Object.keys(c);const d=ht(c);if(!d&&i.length>1&&!te(c))return n(oe(c));if(pt(c)){const l=d?c[ee.PATH]:i[0],u=d?c[ee.PATTERN]:c[l];if(!v(u))throw new Error(Ke(l));const o={keyId:Q(l),pattern:u};return t&&(o.searcher=q(u,e)),o}let r={children:[],operator:i[0]};return i.forEach(l=>{const u=c[l];w(u)&&u.forEach(o=>{r.children.push(n(o))})}),r};return te(a)||(a=oe(a)),n(a)}function yt(a,{ignoreFieldNorm:e=s.ignoreFieldNorm}){a.forEach(t=>{let n=1;t.matches.forEach(({key:c,norm:i,score:d})=>{const r=c?c.weight:null;n*=Math.pow(d===0&&r?Number.EPSILON:d,(r||1)*(e?1:i))}),t.score=n})}function mt(a,e){const t=a.matches;e.matches=[],_(t)&&t.forEach(n=>{if(!_(n.indices)||!n.indices.length)return;const{indices:c,value:i}=n;let d={indices:c,value:i};n.key&&(d.key=n.key.src),n.idx>-1&&(d.refIndex=n.idx),e.matches.push(d)})}function _t(a,e){e.score=a.score}function Mt(a,e,{includeMatches:t=s.includeMatches,includeScore:n=s.includeScore}={}){const c=[];return t&&c.push(mt),n&&c.push(_t),a.map(i=>{const{idx:d}=i,r={item:e[d],refIndex:d};return c.length&&c.forEach(l=>{l(i,r)}),r})}class ${constructor(e,t={},n){this.options={...s,...t},this.options.useExtendedSearch,this._keyStore=new He(this.options.keys),this.setCollection(e,n)}setCollection(e,t){if(this._docs=e,t&&!(t instanceof ne))throw new Error(Fe);this._myIndex=t||ye(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(e){_(e)&&(this._docs.push(e),this._myIndex.add(e))}remove(e=()=>!1){const t=[];for(let n=0,c=this._docs.length;n<c;n+=1){const i=this._docs[n];e(i,n)&&(this.removeAt(n),n-=1,c-=1,t.push(i))}return t}removeAt(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}getIndex(){return this._myIndex}search(e,{limit:t=-1}={}){const{includeMatches:n,includeScore:c,shouldSort:i,sortFn:d,ignoreFieldNorm:r}=this.options;let l=v(e)?v(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return yt(l,{ignoreFieldNorm:r}),i&&l.sort(d),ge(t)&&t>-1&&(l=l.slice(0,t)),Mt(l,this._docs,{includeMatches:n,includeScore:c})}_searchStringList(e){const t=q(e,this.options),{records:n}=this._myIndex,c=[];return n.forEach(({v:i,i:d,n:r})=>{if(!_(i))return;const{isMatch:l,score:u,indices:o}=t.searchIn(i);l&&c.push({item:i,idx:d,matches:[{score:u,value:i,norm:r,indices:o}]})}),c}_searchLogical(e){const t=xe(e,this.options),n=(r,l,u)=>{if(!r.children){const{keyId:f,searcher:g}=r,b=this._findMatches({key:this._keyStore.get(f),value:this._myIndex.getValueForItemAtKeyId(l,f),searcher:g});return b&&b.length?[{idx:u,item:l,matches:b}]:[]}const o=[];for(let f=0,g=r.children.length;f<g;f+=1){const b=r.children[f],h=n(b,l,u);if(h.length)o.push(...h);else if(r.operator===j.AND)return[]}return o},c=this._myIndex.records,i={},d=[];return c.forEach(({$:r,i:l})=>{if(_(r)){let u=n(t,r,l);u.length&&(i[l]||(i[l]={idx:l,item:r,matches:[]},d.push(i[l])),u.forEach(({matches:o})=>{i[l].matches.push(...o)}))}}),d}_searchObjectList(e){const t=q(e,this.options),{keys:n,records:c}=this._myIndex,i=[];return c.forEach(({$:d,i:r})=>{if(!_(d))return;let l=[];n.forEach((u,o)=>{l.push(...this._findMatches({key:u,value:d[o],searcher:t}))}),l.length&&i.push({idx:r,item:d,matches:l})}),i}_findMatches({key:e,value:t,searcher:n}){if(!_(t))return[];let c=[];if(w(t))t.forEach(({v:i,i:d,n:r})=>{if(!_(i))return;const{isMatch:l,score:u,indices:o}=n.searchIn(i);l&&c.push({score:u,key:e,value:i,idx:d,norm:r,indices:o})});else{const{v:i,n:d}=t,{isMatch:r,score:l,indices:u}=n.searchIn(i);r&&c.push({score:l,key:e,value:i,norm:d,indices:u})}return c}}$.version="6.6.2";$.createIndex=ye;$.parseIndex=qe;$.config=s;$.parseQuery=xe;bt(gt);const xt={props:{countries:Array,gameOver:Boolean},data(){return{value:"",fuse:null,results:[],selectedIndex:null}},computed:{showingResults(){return this.value.length>1}},mounted(){this.fuse=new $(this.countries,{threshold:.2,minMatchCharLength:2,ignoreLocation:!0,keys:["country"]}),document.addEventListener("keydown",this.handleKeyDown)},beforeUnmount(){document.removeEventListener("keydown",this.handleKeyDown)},methods:{search(){this.results=this.fuse.search(this.value)},select(a){this.value="",this.results=[],this.$emit("answer",a)},handleKeyDown(a){a.key==="ArrowDown"?(a.preventDefault(),this.selectedIndex===null?this.selectedIndex=0:this.selectedIndex<this.results.length-1&&this.selectedIndex++):a.key==="ArrowUp"?(a.preventDefault(),this.selectedIndex>0&&this.selectedIndex--):(a.key==="Enter"||a.key==="Tab")&&this.select(this.results[this.selectedIndex].item)}}},It={class:"game-guess-input"},St={key:0},vt={key:0,class:"game-guess-input__typeahead"},At=["onClick"],wt={key:0,class:"no-results"};function Et(a,e,t,n,c,i){return m(),S("div",It,[t.gameOver?F("",!0):(m(),S("div",St,[Se(y("input",{"onUpdate:modelValue":e[0]||(e[0]=d=>c.value=d),type:"text",class:W([i.showingResults?"showing-results":""]),placeholder:"Type a country name here...",onInput:e[1]||(e[1]=(...d)=>i.search&&i.search(...d))},null,34),[[ve,c.value]]),i.showingResults?(m(),S("div",vt,[(m(!0),S(Y,null,J(c.results,(d,r)=>(m(),S("button",{key:r,class:W([c.selectedIndex===r?"selected":""]),onClick:l=>i.select(d.item)},se(d.item.country),11,At))),128)),c.results.length?F("",!0):(m(),S("button",wt," No results found! Try again... "))])):F("",!0)]))])}const kt=P(xt,[["render",Et]]),U=[{flag:"fa77ad63cf061270d14fdfa9af73157657fc94ab.png",latitude:41,longitude:20,country:"Albania"},{flag:"7b06cfa2f84450c09d2a3933f09ad183a8a8ffa2.png",latitude:28,longitude:3,country:"Algeria"},{flag:"e5ed13563c2691d7c3e2d512d96077d538bfb7c6.png",latitude:-14.3333,longitude:-170,country:"American Samoa"},{flag:"0678b5bd790592887efd867d0349b5b81670dee9.png",latitude:42.5,longitude:1.6,country:"Andorra"},{flag:"ca83215a8814f06e60135b2e3d99ca9bdbbab6e3.png",latitude:-12.5,longitude:18.5,country:"Angola"},{flag:"f4a669b0ceb801beed1603114bdb8d116d4f0a68.png",latitude:18.25,longitude:-63.1667,country:"Anguilla"},{flag:"671972e32e9168e16852de456b2f5529ca044859.png",latitude:-90,longitude:1,country:"Antarctica"},{flag:"7651d0bad3b27d5f1db0d065d17fdfd8ea7c4ab7.png",latitude:17.05,longitude:-61.8,country:"Antigua and Barbuda"},{flag:"6a916e30fa7b75536a332d84df56fd78f4c8197f.png",latitude:-34,longitude:-64,country:"Argentina"},{flag:"1b13ce47ffda2dba91308ba49e947b085885bcb0.png",latitude:40,longitude:45,country:"Armenia"},{flag:"f258f951fa9bace9dee4bb72307e82b00ff3c9a0.png",latitude:12.5,longitude:-69.9667,country:"Aruba"},{flag:"0b1930b70720f18f32d779b03fe657e696107309.png",latitude:-27,longitude:133,country:"Australia"},{flag:"aa812b348618fb75c41506249ac5ab86d039d09f.png",latitude:47.3333,longitude:13.3333,country:"Austria"},{flag:"9374fa7d9bfa8e0f4040a93f3c0c5d84403347d6.png",latitude:40.5,longitude:47.5,country:"Azerbaijan"},{flag:"f97dbccac8f090161e84d771128c337b2e55bccc.png",latitude:24.25,longitude:-76,country:"Bahamas"},{flag:"6e14da4ac05ed240af871e409b7f86ddb6c6e576.png",latitude:26,longitude:50.55,country:"Bahrain"},{flag:"4ddc0ad8723cd5d4c9b4ee417f718eef2807c332.png",latitude:24,longitude:90,country:"Bangladesh"},{flag:"6b122a4673e8167186d7d606468ad9ce1862e2ed.png",latitude:13.1667,longitude:-59.5333,country:"Barbados"},{flag:"3199c7e64682302df5f3260e1760a42b5f277c1a.png",latitude:53,longitude:28,country:"Belarus"},{flag:"cf2e8fcf99e0bdfd1ac88a0fd2176be5b7e64ad2.png",latitude:50.8333,longitude:4,country:"Belgium"},{flag:"536c057d96628aca1c795f2e7186b9a04bf0f071.png",latitude:17.25,longitude:-88.75,country:"Belize"},{flag:"0421d2f30e56095c580dfcd5441cce9a018d07d7.png",latitude:9.5,longitude:2.25,country:"Benin"},{flag:"bbfc798f80a00efa95a3d7c0158903e6e83055fb.png",latitude:32.3333,longitude:-64.75,country:"Bermuda"},{flag:"5e9eeeac0e71ddafe8c09e5bb87e002aa6d898bf.png",latitude:27.5,longitude:90.5,country:"Bhutan"},{flag:"0366a363e189b6dc01267dc9187cfafce89ed226.png",latitude:-17,longitude:-65,country:"Bolivia, Plurinational State of"},{flag:"ae8752394351a2dacb33c021a1740ff1c144245a.png",latitude:44,longitude:18,country:"Bosnia and Herzegovina"},{flag:"7c7b208b22d3e7824cae38c8ddbe20092b5ba899.png",latitude:-22,longitude:24,country:"Botswana"},{flag:"15f88e98b9c718c955dd95b07ad28f548f6c5cc1.png",latitude:-10,longitude:-55,country:"Brazil"},{flag:"8a4f2e4324bd7fdfff80b42182b0cdcfe89a3e16.png",latitude:-6,longitude:71.5,country:"British Indian Ocean Territory"},{flag:"651fbe825767cb448ed38db14768fbff7379605d.png",latitude:4.5,longitude:114.6667,country:"Brunei Darussalam"},{flag:"6a41e0eab165182765acfb42f3b18bbe4194bd50.png",latitude:43,longitude:25,country:"Bulgaria"},{flag:"fae52a03d40f9c42cf91540f84ccabbb19d9ab15.png",latitude:13,longitude:-2,country:"Burkina Faso"},{flag:"86819cf6ea35cece91407188a5659256e4fcf7dc.png",latitude:-3.5,longitude:30,country:"Burundi"},{flag:"f0e22057a7696600ac6cd0a15eea2aa62eca8642.png",latitude:13,longitude:105,country:"Cambodia"},{flag:"5ee6c2840387f05879a386089acf305942993aa3.png",latitude:6,longitude:12,country:"Cameroon"},{flag:"0a2588ec82549afa8e4511f835e7260d326a95e0.png",latitude:60,longitude:-95,country:"Canada"},{flag:"7813801d03e4c9336ffe7bc32fcf932e3a28389c.png",latitude:16,longitude:-24,country:"Cape Verde"},{flag:"869256a20a2fee1c505809bb15689b0f2784dad1.png",latitude:19.5,longitude:-80.5,country:"Cayman Islands"},{flag:"fd68564166e440b272828b812abaa65da6872f5f.png",latitude:7,longitude:21,country:"Central African Republic"},{flag:"305900b923bc3a9e31fee45cd4852c132f00fa9b.png",latitude:15,longitude:19,country:"Chad"},{flag:"c26ffebe7981bc9b7e88ff2648b2ffa808137ab0.png",latitude:-30,longitude:-71,country:"Chile"},{flag:"2edeb9afb0f71bcd7cdd74b024e0b8f888cf8c76.png",latitude:35,longitude:105,country:"China"},{flag:"8944ff71fd2ec9f83bf0ed4ff8b7d6e5c65077fd.png",latitude:-10.5,longitude:105.6667,country:"Christmas Island"},{flag:"ff088e67bb211dfe916b64365a66923d5794d048.png",latitude:-12.5,longitude:96.8333,country:"Cocos (Keeling) Islands"},{flag:"6b1d7b554a027e78a577f66c63501c5776e31c57.png",latitude:4,longitude:-72,country:"Colombia"},{flag:"ad1ea0ae5bf845e82f024b0eeb8ca4a12292f37f.png",latitude:-12.1667,longitude:44.25,country:"Comoros"},{flag:"f19df4a1d8e1720a97eb44de966fe6928b67bf40.png",latitude:-1,longitude:15,country:"Congo"},{flag:"18ed03591045386a80c6625cdf28f6e59dc56d86.png",latitude:-1,longitude:25,country:"Congo, the Democratic Republic of the"},{flag:"228a1770529b7d912e330d90712ff5814982b719.png",latitude:-21.2333,longitude:-159.7667,country:"Cook Islands"},{flag:"033c7770acd89fa32cc53fae5a40881dc3f32f3b.png",latitude:10,longitude:-84,country:"Costa Rica"},{flag:"060d343a640d4b1733d920bd4dac26e0b83a14fa.png",latitude:8,longitude:-5,country:"Côte d'Ivoire"},{flag:"df8880b4acbf42263cbe57f5d874d4b5e4d31a92.png",latitude:45.1667,longitude:15.5,country:"Croatia"},{flag:"1f4cecc2dde05d111dfb7c5d9269dafca6fd70ea.png",latitude:21.5,longitude:-80,country:"Cuba"},{flag:"281393636cad77643f120d4057878f3a20095706.png",latitude:35,longitude:33,country:"Cyprus"},{flag:"2d5f0eca073c5569356c6a3e2b38a48b42f2e04d.png",latitude:49.75,longitude:15.5,country:"Czech Republic"},{flag:"a454406634c5367b18fa44ba6e40b7d819e1c7fa.png",latitude:56,longitude:10,country:"Denmark"},{flag:"8aed1f25fcd9b26e56152b104034424b8a3bdde2.png",latitude:11.5,longitude:43,country:"Djibouti"},{flag:"f66d7f45920469af3ee133609bbceb67a910a359.png",latitude:15.4167,longitude:-61.3333,country:"Dominica"},{flag:"f634783ee073e86b12f8b80e41616e0b83d9cce2.png",latitude:19,longitude:-70.6667,country:"Dominican Republic"},{flag:"7424fde725eb905a0bdad8a9af0074b88acd5cf1.png",latitude:-2,longitude:-77.5,country:"Ecuador"},{flag:"95e5f2a24dfd6ffdb0917a7608b520ca766dfe1b.png",latitude:27,longitude:30,country:"Egypt"},{flag:"6f6a3b456956290b39bfc74acaf569dea9f5c8a2.png",latitude:13.8333,longitude:-88.9167,country:"El Salvador"},{flag:"1ca9678053cdb38943155e7e95bba97fe0bca919.png",latitude:2,longitude:10,country:"Equatorial Guinea"},{flag:"9b8511bbc827c6e30289ddf5db9d529772adf3ff.png",latitude:15,longitude:39,country:"Eritrea"},{flag:"7c9347d0c7d81dca7d6b8c2614921d179d91a349.png",latitude:59,longitude:26,country:"Estonia"},{flag:"2b83373ad0d5029715daa1b24378b2009109ae2a.png",latitude:8,longitude:38,country:"Ethiopia"},{flag:"583f17824a82512d80060a18085dde64215999f5.png",latitude:-51.75,longitude:-59,country:"Falkland Islands (Malvinas)"},{flag:"1f661b14431c4ef563d78614dfd1cfc533187f05.png",latitude:62,longitude:-7,country:"Faroe Islands"},{flag:"080f05fc396ccc0cef7d209818961b0fc6b342fc.png",latitude:-18,longitude:175,country:"Fiji"},{flag:"f416bfd34e9bc6f6b0b2b6db47d885c19ad4f485.png",latitude:64,longitude:26,country:"Finland"},{flag:"7555ea52f613b14fd809413b4f0e0a8f4dd060c4.png",latitude:46,longitude:2,country:"France"},{flag:"4f18247fafbbb11b2f2a776d5f8f0869546c76ec.png",latitude:4,longitude:-53,country:"French Guiana"},{flag:"dbcc1dc0ea535fe3f89e387c80ad1a4c4f474cc0.png",latitude:-15,longitude:-140,country:"French Polynesia"},{flag:"fa6903ae004c01a431e5980816d56e7f3436d2f8.png",latitude:-43,longitude:67,country:"French Southern Territories"},{flag:"284e22aeb11b757111179a485bcfa95da0288130.png",latitude:-1,longitude:11.75,country:"Gabon"},{flag:"ecc620925b6b215886db3f4d823a46dbfd847031.png",latitude:13.4667,longitude:-16.5667,country:"Gambia"},{flag:"88f882442f1fe4ad3b2298527f049b4be1ab3aec.png",latitude:42,longitude:43.5,country:"Georgia"},{flag:"d46ead50ad64f65faca38a3bf44117b049e49311.png",latitude:51,longitude:9,country:"Germany"},{flag:"b6a67733acbaa42e72b5c70f6d051d30027f21e9.png",latitude:8,longitude:-2,country:"Ghana"},{flag:"21ea91f37b9ee04923e2716f33e5c9933a768a06.png",latitude:36.1833,longitude:-5.3667,country:"Gibraltar"},{flag:"1248fd6171de97687051718e734ed88f43f43253.png",latitude:39,longitude:22,country:"Greece"},{flag:"734107fb94a472b6db883141aecfd7e5a40af500.png",latitude:72,longitude:-40,country:"Greenland"},{flag:"658190f0e5cb1632cc14291c748f4b7bfa2e6a8c.png",latitude:12.1167,longitude:-61.6667,country:"Grenada"},{flag:"202f0422b62dd909a6720fa75a4b32c326fdb90a.png",latitude:16.25,longitude:-61.5833,country:"Guadeloupe"},{flag:"1d495a1db75c4c9a72ec44a03a345a83c7345e45.png",latitude:13.4667,longitude:144.7833,country:"Guam"},{flag:"cdfe68e2fc80c23055d3189a454b64dc2616f859.png",latitude:15.5,longitude:-90.25,country:"Guatemala"},{flag:"c4199c99d038ffeae588030a8a8601338a6c9eb0.png",latitude:49.5,longitude:-2.56,country:"Guernsey"},{flag:"6925da07ee056ddfeb7f48a7afc26910b68919fa.png",latitude:11,longitude:-10,country:"Guinea"},{flag:"a3e418e3b498f76d24a94c746284f93620c81957.png",latitude:12,longitude:-15,country:"Guinea-Bissau"},{flag:"61080d04905fdfe26c385defff5e75b2161c7ace.png",latitude:5,longitude:-59,country:"Guyana"},{flag:"5bd78dd2fa9ca5cd4499e9a6ba30ca6ecb84b8a1.png",latitude:19,longitude:-72.4167,country:"Haiti"},{flag:"dc8f9b2c0195d2d70b3f7a71b187eeb4a5110811.png",latitude:-53.1,longitude:72.5167,country:"Heard Island and McDonald Islands"},{flag:"033eeae5de4401a609c480b9bfe996781431b64d.png",latitude:41.9,longitude:12.45,country:"Holy See (Vatican City State)"},{flag:"8f9efd4a0ebfdfba60fd3ca889964dd9d6c1ec55.png",latitude:15,longitude:-86.5,country:"Honduras"},{flag:"33e1003757e64fa7d9320a398df0845ae778a4a4.png",latitude:22.25,longitude:114.1667,country:"Hong Kong"},{flag:"842efc245f1937c8c8bf373066acbdd43af65bd0.png",latitude:47,longitude:20,country:"Hungary"},{flag:"e7f8b7adeca6d07b92b1016a9b9f282805477c21.png",latitude:65,longitude:-18,country:"Iceland"},{flag:"d2024ea519c136c9fdadbebe2c8bf457899b7cd4.png",latitude:20,longitude:77,country:"India"},{flag:"9c4566ef66cc1981fc7453d6c8c1e1b7eccfc0ce.png",latitude:-5,longitude:120,country:"Indonesia"},{flag:"dcdb9f8c261ae106cc6567f6a144120d73d54c57.png",latitude:32,longitude:53,country:"Iran, Islamic Republic of"},{flag:"fbce5ffdc3623f8bcd821a8057921061e5f99699.png",latitude:33,longitude:44,country:"Iraq"},{flag:"21331d241a2e069f4e5ae487c92288e03b23c2d5.png",latitude:53,longitude:-8,country:"Ireland"},{flag:"05e86423719d7cde4364861ac010f66f0dfb4236.png",latitude:54.23,longitude:-4.55,country:"Isle of Man"},{flag:"4842ad7838ecd55533941c53c7ae1870b7ff976b.png",latitude:31.5,longitude:34.75,country:"Israel"},{flag:"ea26d822f3316de9b876300aa10003f60e634101.png",latitude:42.8333,longitude:12.8333,country:"Italy"},{flag:"db4c11951fcbcefc51ef403def9eb98ef025d602.png",latitude:18.25,longitude:-77.5,country:"Jamaica"},{flag:"c835b52059fe9873d5e7e98fadaf581bc4635ce7.png",latitude:36,longitude:138,country:"Japan"},{flag:"33563049a145f933c92b112be7f6967a0a7624d7.png",latitude:49.21,longitude:-2.13,country:"Jersey"},{flag:"bc8eabc423c024573ab7402e60274ab18d237b59.png",latitude:31,longitude:36,country:"Jordan"},{flag:"6b6261b68f7193aca2cca7582c3ea1ff6012ac07.png",latitude:48,longitude:68,country:"Kazakhstan"},{flag:"4fff961c1ebd8bb28294db5e1761a2215ecec4f3.png",latitude:1,longitude:38,country:"Kenya"},{flag:"36d2b8b509b8ca3a97c3644a50092d5d25fdf2dd.png",latitude:1.4167,longitude:173,country:"Kiribati"},{flag:"3f7db1b841145facebd30775017b2e570b533678.png",latitude:40,longitude:127,country:"Korea, Democratic People's Republic of"},{flag:"38abed2282c73ebf4acdc409b967a6ef24617950.png",latitude:37,longitude:127.5,country:"Korea, Republic of"},{flag:"59fd698b7d74918caf79cb3f531e56d69ab62a4b.png",latitude:29.3375,longitude:47.6581,country:"Kuwait"},{flag:"1295a4634f0c908e5b2c69924c0e2c4a3d9e1e6e.png",latitude:41,longitude:75,country:"Kyrgyzstan"},{flag:"6ee570e3f3407dfbee548b60572816c387d8cfbe.png",latitude:18,longitude:105,country:"Lao People's Democratic Republic"},{flag:"a6d5d6560f2e293d1facda2ab59fd8ddd44300a1.png",latitude:57,longitude:25,country:"Latvia"},{flag:"178357461b7630ce10ae2a90ac0c60765d514324.png",latitude:33.8333,longitude:35.8333,country:"Lebanon"},{flag:"64f5f55ccb3c3e6d2306c433cb317d811d4dc6dd.png",latitude:-29.5,longitude:28.5,country:"Lesotho"},{flag:"cf5889a9da59f4a8eb307b3386ce9f54eb0f1465.png",latitude:6.5,longitude:-9.5,country:"Liberia"},{flag:"0f646f695fb603dd5b86b7164ddd88ace2b6d37b.png",latitude:25,longitude:17,country:"Libyan Arab Jamahiriya"},{flag:"94fe8236ff1ca57c4130d9e6ea3f2dbf33ba24d7.png",latitude:47.1667,longitude:9.5333,country:"Liechtenstein"},{flag:"3fc6ba9dd8e9d0e01a893a82f895626e8db1980c.png",latitude:56,longitude:24,country:"Lithuania"},{flag:"89aeb72a3aaa871a67689171de165899240f87cc.png",latitude:49.75,longitude:6.1667,country:"Luxembourg"},{flag:"14656b21c83001b6167f0c9836ad879ad3f01501.png",latitude:22.1667,longitude:113.55,country:"Macao"},{flag:"e00f37228b55ffe47188be9076196f144ec2b917.png",latitude:41.8333,longitude:22,country:"Macedonia, the former Yugoslav Republic of"},{flag:"f679445fede853405b03e76b85205ce710a6c0a8.png",latitude:-20,longitude:47,country:"Madagascar"},{flag:"a306e7cf32b36c19eecaad0edf31bc6293e3d1eb.png",latitude:-13.5,longitude:34,country:"Malawi"},{flag:"18355840387f5fd3d9c791dd6f8f86d40598aba7.png",latitude:2.5,longitude:112.5,country:"Malaysia"},{flag:"fdea3c6461f053603d679ef4376841b36a0fd888.png",latitude:3.25,longitude:73,country:"Maldives"},{flag:"c6db4f8697e82d655212bd4360a6ce8b15861acd.png",latitude:17,longitude:-4,country:"Mali"},{flag:"4ab507ececa94aa16bcc5b65a2b66c046faf6c1b.png",latitude:35.8333,longitude:14.5833,country:"Malta"},{flag:"3320f46fae1bd757783b1de7404b6cf373011566.png",latitude:9,longitude:168,country:"Marshall Islands"},{flag:"bf23214dab291a2b3b4db3b2738b3431163e8a4d.png",latitude:14.6667,longitude:-61,country:"Martinique"},{flag:"1c76ce8e63808dcb91124edef9a6a1f22b33378c.png",latitude:20,longitude:-12,country:"Mauritania"},{flag:"3229fd06272dc50e754ffad5ffe76fcbdfa6a3b2.png",latitude:-20.2833,longitude:57.55,country:"Mauritius"},{flag:"22cfadc229b93d801a3851b9e80ef548e484b95c.png",latitude:-12.8333,longitude:45.1667,country:"Mayotte"},{flag:"6440e4760156f11f359a13e82987c74250caef29.png",latitude:23,longitude:-102,country:"Mexico"},{flag:"0fbbff20f7b995260bb9e96a0850b7f3bd333457.png",latitude:6.9167,longitude:158.25,country:"Micronesia, Federated States of"},{flag:"5390c5c7bb87d610593e9e562bc46c2c06a947ad.png",latitude:47,longitude:29,country:"Moldova, Republic of"},{flag:"2d22d6082889b482fc5fd93b4f5a0437d8dd11d7.png",latitude:43.7333,longitude:7.4,country:"Monaco"},{flag:"b11bb92eff0c960451c90d79b024737d75e6786a.png",latitude:46,longitude:105,country:"Mongolia"},{flag:"74daabe3b1aa4c536fc04fe47817c1aacf203def.png",latitude:42,longitude:19,country:"Montenegro"},{flag:"01cc6a583fa45fea2f01f147a8dc5058098dbe57.png",latitude:16.75,longitude:-62.2,country:"Montserrat"},{flag:"20860222aabaa89032130461d0404510e15529e8.png",latitude:32,longitude:-5,country:"Morocco"},{flag:"a3df0bd68c1cd28b813486f470f50ee71f19d24c.png",latitude:-18.25,longitude:35,country:"Mozambique"},{flag:"82808b712f2a2aa003acc4cfb47754f406c9f014.png",latitude:22,longitude:98,country:"Myanmar"},{flag:"90adfa85df27e3eed4412209d606010c10e5e41f.png",latitude:-22,longitude:17,country:"Namibia"},{flag:"f912e75c53fa6cdb929b8ec18341bf9b6fa31aa1.png",latitude:-1,longitude:166.9167,country:"Nauru"},{flag:"d05d9d1411a769ca80da19a896e166323cb241cd.png",latitude:28,longitude:84,country:"Nepal"},{flag:"9ddf7f8877e45cb79771f7601c7f7d3363db19ee.png",latitude:52.5,longitude:5.75,country:"Netherlands"},{flag:"9dc86143f625573b82acc77c9a6f02a8117bdc2e.png",latitude:-21.5,longitude:165.5,country:"New Caledonia"},{flag:"61b4454f9185152cf6b40a6fb116e12f30590195.png",latitude:-41,longitude:174,country:"New Zealand"},{flag:"00f6121fd0535430740549a342c5fee84703c44f.png",latitude:13,longitude:-85,country:"Nicaragua"},{flag:"5dcac458d58d6dddb53aeac5e7e6eebe24934f67.png",latitude:16,longitude:8,country:"Niger"},{flag:"6726cbf1490060d552eef49bc8b4f31874ef9857.png",latitude:10,longitude:8,country:"Nigeria"},{flag:"94ef683a23b7b6ce052ef00ad6f726ad91a34368.png",latitude:-19.0333,longitude:-169.8667,country:"Niue"},{flag:"cefbeee46fd539cf77ff28d93f892c3ae715dce9.png",latitude:-29.0333,longitude:167.95,country:"Norfolk Island"},{flag:"193d47d0b21537d66c0d1491d6b8d920d945e6e4.png",latitude:15.2,longitude:145.75,country:"Northern Mariana Islands"},{flag:"c8bcf4e7dbcb2b793369af7f1f5012cd7220bae6.png",latitude:62,longitude:10,country:"Norway"},{flag:"cd78717ce43e2b688491965d3592660acb068e21.png",latitude:21,longitude:57,country:"Oman"},{flag:"7323b4b57f520c8d9ec55b70c315ba4e0bc02746.png",latitude:30,longitude:70,country:"Pakistan"},{flag:"e0e4491dcca9af967e1d83bad52f9aaa032eb27d.png",latitude:7.5,longitude:134.5,country:"Palau"},{flag:"efd5d9b68468144b019bcfaff9a0f6614b274907.png",latitude:32,longitude:35.25,country:"Palestinian Territory, Occupied"},{flag:"8592dfd1daf11818fb72902b23083f0ba9b1103f.png",latitude:9,longitude:-80,country:"Panama"},{flag:"be043585c0b78d851ea561aa2456464c8332d2e2.png",latitude:-6,longitude:147,country:"Papua New Guinea"},{flag:"65053545188b3ab585acf2583a752c2f83171c1b.png",latitude:-23,longitude:-58,country:"Paraguay"},{flag:"c25d1f1e0ffaa6018f52ee5b4ca095d3b2ce1396.png",latitude:-10,longitude:-76,country:"Peru"},{flag:"d14c03c87e0a8b97a005e69aefa66687318315be.png",latitude:13,longitude:122,country:"Philippines"},{flag:"ecabfd1c9473443c57936ea0b605959ceabb02ca.png",latitude:-24.7,longitude:-127.4,country:"Pitcairn"},{flag:"c12267706e42677691f5b8a9ce284b4bb26b1e4d.png",latitude:52,longitude:20,country:"Poland"},{flag:"39a0f13089333b88c421b95f075716286e5a85bf.png",latitude:39.5,longitude:-8,country:"Portugal"},{flag:"5cdd2735bb655d8c88aa4944f0a86ac3975dd266.png",latitude:18.25,longitude:-66.5,country:"Puerto Rico"},{flag:"8e2fd7f592b64475c3de144e0fa4e8305c76308d.png",latitude:25.5,longitude:51.25,country:"Qatar"},{flag:"b367ca944674551c3b9a4f7be8837f3a89c9ac48.png",latitude:-21.1,longitude:55.6,country:"Réunion"},{flag:"f500d8054cdfd73a56f768f028ba88483e6e3edb.png",latitude:46,longitude:25,country:"Romania"},{flag:"cf7e0662a7cd7a08a468d0abc60b5fd6a817dc77.png",latitude:60,longitude:100,country:"Russian Federation"},{flag:"194c39321cb2a96f2fd099e8ea171b0a15012954.png",latitude:-2,longitude:30,country:"Rwanda"},{flag:"54ed02eeece8a9b495b3aba876bd67038064621f.png",latitude:-15.9333,longitude:-5.7,country:"Saint Helena, Ascension and Tristan da Cunha"},{flag:"7f602ead9db0c383bb2e2b61548c045c1814ac75.png",latitude:17.3333,longitude:-62.75,country:"Saint Kitts and Nevis"},{flag:"b7ba8d8e140b2c182a9e6396eb0035eff503a6ad.png",latitude:13.8833,longitude:-61.1333,country:"Saint Lucia"},{flag:"e7c5ba8233194dc9a5d1dae4b9b07696f037bf66.png",latitude:46.8333,longitude:-56.3333,country:"Saint Pierre and Miquelon"},{flag:"2e6f5518468fe7e50859c60c7203849e981b771c.png",latitude:13.25,longitude:-61.2,country:"Saint Vincent and the Grenadines"},{flag:"c07f7c2217152b2b17ae1d762524c9b7d4d57fe4.png",latitude:-13.5833,longitude:-172.3333,country:"Samoa"},{flag:"289e52d2bd1993c347fe057f0734f60e9d62a894.png",latitude:43.7667,longitude:12.4167,country:"San Marino"},{flag:"c4cef93afb212aa20b15ef517b19c608c6f200df.png",latitude:1,longitude:7,country:"Sao Tome and Principe"},{flag:"331544c75e259630601b42b9cbfa915ffd7f2623.png",latitude:25,longitude:45,country:"Saudi Arabia"},{flag:"a686ecf243cd28f071a649737b1e8cdf8a0d8f1d.png",latitude:14,longitude:-14,country:"Senegal"},{flag:"ee55d23c2d40e25de38b4be47d67ce23a3479a2b.png",latitude:44,longitude:21,country:"Serbia"},{flag:"0155243136122c14701eda4fad9399c521cec4e9.png",latitude:-4.5833,longitude:55.6667,country:"Seychelles"},{flag:"47d6c62d05de031dd8932c85ebf230518efd78af.png",latitude:8.5,longitude:-11.5,country:"Sierra Leone"},{flag:"d9756f8716224d850b32c9c4f77c6b9f7e3498ae.png",latitude:1.3667,longitude:103.8,country:"Singapore"},{flag:"c3f6a2cb5c05557b4f659fb4c97f47c014560788.png",latitude:48.6667,longitude:19.5,country:"Slovakia"},{flag:"f1226a7cadf0caac6afb30d73f0653b5e848995f.png",latitude:46,longitude:15,country:"Slovenia"},{flag:"2700ad3d2c345cef81300998d552305b8691f993.png",latitude:-8,longitude:159,country:"Solomon Islands"},{flag:"a9715cf167b032d5aed1342f66ae9b1124f558be.png",latitude:10,longitude:49,country:"Somalia"},{flag:"3aef17ba386523d4e5170989e7a11f962c59e722.png",latitude:-29,longitude:24,country:"South Africa"},{flag:"efbd4d09d77ca3f0a0f7a964da3db077e92f196f.png",latitude:-54.5,longitude:-37,country:"South Georgia and the South Sandwich Islands"},{flag:"7c6f2636100817ff2d673aceb1c1969f9eecaa01.png",latitude:40,longitude:-4,country:"Spain"},{flag:"bce9eea14db5e5376f1fb64cf04501635a69a338.png",latitude:7,longitude:81,country:"Sri Lanka"},{flag:"384bd30d75cd6382f9c4b6e387f7724b9f41452d.png",latitude:15,longitude:30,country:"Sudan"},{flag:"76a1c1c5dbe5e384ac5bffc50d07d16d129fd2f8.png",latitude:4,longitude:-56,country:"Suriname"},{flag:"28dbe58a7efa34b93de32c1a876cc2b98f50f17a.png",latitude:-26.5,longitude:31.5,country:"Swaziland"},{flag:"1d7340d5743530d6d29788d2db1f7c31f2a06e99.png",latitude:62,longitude:15,country:"Sweden"},{flag:"58984bbc6d8c6749c59e8d0e143a48cf2542dc4b.png",latitude:47,longitude:8,country:"Switzerland"},{flag:"4c84984996b2d335f71f2db241c3580ba28377a8.png",latitude:35,longitude:38,country:"Syrian Arab Republic"},{flag:"2ac555848703fd7e6569e2479f5e37f0c983c54f.png",latitude:23.5,longitude:121,country:"Taiwan, Province of China"},{flag:"39e18e7c4184dc7f76955e72fe8996d7040a9e75.png",latitude:39,longitude:71,country:"Tajikistan"},{flag:"de3350630ca725fa2e8b0f0bd60f26579af0675f.png",latitude:-6,longitude:35,country:"Tanzania, United Republic of"},{flag:"e04d9337916599a23ca929d3c054a98e2d2761eb.png",latitude:15,longitude:100,country:"Thailand"},{flag:"fbd4f0b4cd278d614eab480c364e7138b98fd40b.png",latitude:-8.55,longitude:125.5167,country:"Timor-Leste"},{flag:"68381873cbfdd43317beec7cdc915b69c99c697a.png",latitude:8,longitude:1.1667,country:"Togo"},{flag:"b400dfa3aaafe1bb7eac40c4b933711da123df1e.png",latitude:-9,longitude:-172,country:"Tokelau"},{flag:"39606b7ed96eafbc894405f2d43ee59c4fdd76ee.png",latitude:-20,longitude:-175,country:"Tonga"},{flag:"7439498e7bec652ae15ff2868d3b3febfc2fde19.png",latitude:11,longitude:-61,country:"Trinidad and Tobago"},{flag:"c41b432e3d8c851212dbaca94ada2b9b4c0aa8a9.png",latitude:34,longitude:9,country:"Tunisia"},{flag:"f7f0256c477ffa1e9687b9a61e6dab487911afa2.png",latitude:39,longitude:35,country:"Turkey"},{flag:"af86ba2dc214c7c130aec69f936d676caaffacb7.png",latitude:40,longitude:60,country:"Turkmenistan"},{flag:"1137b51eba4f31e69ab04b53dcf786cd5fe98b38.png",latitude:21.75,longitude:-71.5833,country:"Turks and Caicos Islands"},{flag:"8853dd23d55d06ccc04243e365fd345d8640c8d5.png",latitude:-8,longitude:178,country:"Tuvalu"},{flag:"37e5f99506fbf1afef7e95b24920469a311ece53.png",latitude:1,longitude:32,country:"Uganda"},{flag:"c8c0c5a5bb34f7ed18888d3d6bf02a7f26188c26.png",latitude:49,longitude:32,country:"Ukraine"},{flag:"e08cca7f1c7aa892ac59febd5ee1f943cc276c19.png",latitude:24,longitude:54,country:"United Arab Emirates"},{flag:"622085518202d40cf2bb9dc1554b4af12712a510.png",latitude:54,longitude:-2,country:"United Kingdom"},{flag:"8a007f3b725f0414b389d91efa4beaa55ee98242.png",latitude:38,longitude:-97,country:"United States"},{flag:"846bc149c1b83929d01af4958fba896328f61b65.png",latitude:-33,longitude:-56,country:"Uruguay"},{flag:"33db564c05cbf53bd99662912b52ea89c4864f5d.png",latitude:41,longitude:64,country:"Uzbekistan"},{flag:"4f624af8c9b5d6e83de13bfdb80fc10f0c8039ac.png",latitude:-16,longitude:167,country:"Vanuatu"},{flag:"c5ad584bb20577724ed67250eacbcbee32a89109.png",latitude:8,longitude:-66,country:"Venezuela, Bolivarian Republic of"},{flag:"109c09bf2ecac45314f1f18e4eea61956f448ea3.png",latitude:16,longitude:106,country:"Viet Nam"},{flag:"5e08bb03f36fe3e4e71e00af1830a6e09fd3767f.png",latitude:18.5,longitude:-64.5,country:"Virgin Islands, British"},{flag:"04cca0b3d58988779be25d5152ec84d788e04d3c.png",latitude:18.3333,longitude:-64.8333,country:"Virgin Islands, U.S."},{flag:"fef663ddfa7949854608c9270df520f1bf47aabc.png",latitude:-13.3,longitude:-176.2,country:"Wallis and Futuna"},{flag:"adb3c0d965e6dea30311a8d8fb652b1994cde254.png",latitude:24.5,longitude:-13,country:"Western Sahara"},{flag:"431d1063932ad98d293294100e52001294368469.png",latitude:15,longitude:48,country:"Yemen"},{flag:"fbe5b6da88c6530cd4d2b6fb7ae8d420027e8b75.png",latitude:-15,longitude:30,country:"Zambia"},{flag:"99fc487d125185754f9f3c0b4a42ca110a1c54c4.png",latitude:-20,longitude:30,country:"Zimbabwe"},{flag:"3269bb53915887ca4d65633c8e8f44495d14c635.png",latitude:33,longitude:65,country:"Afghanistan"}];class p{static random(){return U[Math.floor(Math.random()*U.length)]}static countries(){return U}static getResult(e,t){return e.country===t.country?{success:!0,guess:e.country,distance:0,bearing:0,percent:1}:{guess:e.country,...p.geolocate(e,t)}}static geolocate(e,t){const n=p.distance(e,t);return{success:!1,distance:n,bearing:p.bearing(e,t),percent:1-n/12742}}static bearing(e,t){const n=p.deg2rad(t.longitude-e.longitude),c=Math.sin(n)*Math.cos(p.deg2rad(t.latitude)),i=Math.cos(p.deg2rad(e.latitude))*Math.sin(p.deg2rad(t.latitude))-Math.sin(p.deg2rad(e.latitude))*Math.cos(p.deg2rad(t.latitude))*Math.cos(n),d=p.rad2deg(Math.atan2(c,i));return d<0?360+d:d}static distance(e,t){const c=p.deg2rad(t.latitude-e.latitude),i=p.deg2rad(t.longitude-e.longitude),d=Math.sin(c/2)*Math.sin(c/2)+Math.cos(p.deg2rad(e.latitude))*Math.cos(p.deg2rad(t.latitude))*Math.sin(i/2)*Math.sin(i/2);return 6371*(2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)))}static deg2rad(e){return e*(Math.PI/180)}static rad2deg(e){return e*(180/Math.PI)}}const Lt={data(){return{country:null,countries:[],results:[],gameOver:!1}},mounted(){this.startGame()},methods:{answer(a){const e=p.getResult(a,this.country);this.results.push(e),(e.success||this.results.length>=6)&&(this.gameOver=!0,e.success)},startGame(){this.country=p.random(),this.countries=p.countries()},resetGame(){this.gameOver=!1,this.results=[],this.startGame()}}},Rt={key:0,class:"game"},Ct={class:"game__flag"},Nt=["src"],Tt={class:"game__guesses"},Ot={class:"game__restart"},$t={class:"game__guess-input"};function Pt(a,e,t,n,c,i){const d=Oe,r=kt;return c.country?(m(),S("div",Rt,[y("div",Ct,[y("img",{src:`images/flags/${c.country.flag}`},null,8,Nt)]),y("div",Tt,[(m(!0),S(Y,null,J(c.results,(l,u)=>(m(),K(d,{key:u,result:l},null,8,["result"]))),128)),(m(!0),S(Y,null,J(6-c.results.length,l=>(m(),K(d,{key:l}))),128))]),y("div",Ot,[y("button",{class:"game__play-again",onClick:e[0]||(e[0]=(...l)=>i.resetGame&&i.resetGame(...l))},se(c.gameOver?"Play Again":"Start New Game"),1)]),y("div",$t,[ae(r,{countries:c.countries,"game-over":c.gameOver,onAnswer:i.answer},null,8,["countries","game-over","onAnswer"])])])):F("",!0)}const Bt=P(Lt,[["render",Pt]]),Gt={};function Dt(a,e){const t=Bt,n=Ae;return m(),K(n,{class:"game-section"},{default:fe(()=>[ae(t)]),_:1})}const Ft=P(Gt,[["render",Dt]]),Kt={};function jt(a,e){const t=Ft,n=we;return m(),K(n,null,{default:fe(()=>[ae(t)]),_:1})}const Ut=P(Kt,[["render",jt]]);export{Ut as default};
